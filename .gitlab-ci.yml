image: node:17
stages:
  - init
  - test
  - cache-test


.get_changed_files: &get_changed_files |
  changedFiles=$(git diff origin/develop -r --no-commit-id --name-only | grep -i -P 'stories.js|test.integration.js|test.unit.js|.vue' | grep -v 'test.integration.js-snapshot')
  # echo "$changedFiles"
  basenames=$(basename -s .stories.js $(basename -s .test.integration.js $(basename -s .vue -a $changedFiles)))
  basenamesWithSlash=""
  for val in $basenames; do basenamesWithSlash+="/$val "; done
  testfilesUnique=$(echo $basenamesWithSlash | tr ' ' '\n' | awk '!a[$0]++' | tr '\n' ' ')
  # echo "$basenames"
  # todo checking if each file in testfilesUnique exists
  echo "$testfilesUnique"

# Define a hidden job to be used with extends
# Better than default to avoid activating cache for all jobs
.dependencies_cache_develop:
  cache:
    key: devel-$CI_COMMIT_REF_SLUG
    paths:
      - package-lock.json
      - node_modules
      - /ms-playwright/
    policy: pull
.dependencies_cache_productive:
  cache:
    key: productive-$CI_COMMIT_REF_SLUG
    paths:
      - test.txt
    policy: pull

init:npm:prod:
  image: mcr.microsoft.com/playwright:v1.15.2-focal
  stage: init
  extends: .dependencies_cache_productive
  script: |
    echo "test" >> test.txt
    cat test.txt

init:npm:
  image: mcr.microsoft.com/playwright:v1.15.2-focal
  stage: init
  extends: .dependencies_cache_develop
  script: |
    echo "[script.sh] install dependencies..."
    npm run libclean
    npm run libbuild
    npm i -D @playwright/test
    npx playwright install



test:file-prod:
  stage: test
  extends: .dependencies_cache_productive
  dependencies:
    - init:npm
  script:
    - ls -lah
    - cat test.txt
    - ls -lah /ms-playwright
    - npm run liblint

test:lint:
  stage: test
  extends: .dependencies_cache_develop
  dependencies:
    - init:npm
  script:
    - ls -lah
    - ls -lah node_modules
    - ls -lah /ms-playwright
    - npm run liblint

test:unit:
  stage: test
  extends: .dependencies_cache_develop
  dependencies:
    - init:npm
  script:
    # -curl -o ./node_modules/ -H "PRIVATE-TOKEN:$TOKEN" https://gitlab.uib.gmbh/uib/opsiweb-ui-components/-/jobs/artifacts/$BRANCH/raw/artifact1?job=vue-job1
    - npm run libtest:unit
  coverage: /All files\s*\|\s*([\d\.]+)/
  artifacts:
    reports:
      cobertura: coverage/clover.xmlci


test:components:changed:
  image: mcr.microsoft.com/playwright:v1.15.2-focal
  stage: test
  extends: .dependencies_cache_develop
  dependencies:
    - init:npm
  except:
    - develop
  script:
    - *get_changed_files
    - echo "$testfilesUnique"
    - npx playwright install
    - npx playwright install-deps

    - PORT=8888 nohup npm run libdev > .dev.log &
    - PORT=3003 nohup npm run libstory > .storybook.log &
    - sleep 60
    - npm run libtest:integration '$testfilesUnique' || exit_code=$?
    - npm run libtest:delete-empty-results
    - exit $exit_code
  allow_failure: true
  artifacts:
    name: 'opsi-ui-components-test-result-components'
    when: on_failure
    paths:
      - test-results/
      - .storybook.log
      - .dev.log
    expire_in: 2 day

test:components:all:
  image: mcr.microsoft.com/playwright:v1.15.2-focal
  stage: test
  extends: .dependencies_cache_develop
  dependencies:
    - init:npm
  only:
    - develop
  script:
    - npx playwright install
    - npx playwright install-deps

    - PORT=8888 nohup npm run libdev > .dev.log &
    - PORT=3003 nohup npm run libstory > .storybook.log &
    - sleep 60
    - npm run libtest:integration || exit_code=$?
    - npm run libtest:delete-empty-results
    - exit $exit_code
  allow_failure: true
  artifacts:
    name: 'opsi-ui-components-test-result-components'
    when: on_failure
    paths:
      - test-results/
      - .storybook.log
      - .dev.log
    expire_in: 2 day
# test:test-e2e:
#   stage: test
#   extends: .dependencies_cache_develop
#   dependencies:
#     - init:npm
#   script:
#     - npx playwright install
#     - PORT=8888 nohup npm run libdev &
#     - sleep 20
#     - echo $PLAYWRIGHT_BROWSERS_PATH
#     - npm run libtest:e2e
#   allow_failure: true
#   artifacts:
#     name: 'opsi-webgui-test-result-e2e'
#     when: on_failure
#     paths:
#       - test-results/
#     expire_in: 2 day
