{
  "python.pythonPath": "/usr/bin/python3",
  // // "files.associations": { "**/../.data/*.conf*": "python"}, // Does not work through .vscode/settings.json - only ~user/.config/Code/settings.json. See https://github.com/microsoft/vscode/issues/89179
  "code-eol.highlightExtraWhitespace": true,
  // "editor.formatOnSave": false,
  // "editor.codeActionsOnSave": {
  //   "source.fixAll.eslint": false
  // },
  // "js/ts.implicitProjectConfig.experimentalDecorators": true,

  "i18n-ally.localesPaths": ["/workspace/opsiweb/uib-components/locale", "/Workspace/opsiweb/ui/locale"],
  "i18n-ally.keystyle": "flat",
  "i18n-ally.sourceLanguage": "de",
  "i18n-ally.enabledParsers": ["json" ],
  // "packageManager": "npm",
  "eslint.onIgnoredFiles": "warn",
  // // "eslint.workingDirectories": [
  // //   { "directory": "/workspace/frontend/ui", "changeProcessCWD": false },
  // //   { "directory": "/workspace/frontend/uib-components", "changeProcessCWD": false }
  // // ],



  // // ESLint settings - runs with "source.fixAll.eslint"
  // "eslint.alwaysShowStatus": true,
  // "eslint.debug": false,
  // "eslint.format.enable": true,
  // "eslint.options": {
  //   "configFile": "../frontend/.eslintrc.js"
  // },
  // "eslint.probe": ["javascript", "typescript", "vue"],
  "eslint.validate": [
    "javascript",
    "typescript",
    "vue",
    "html"
  ],
  // // We use Volar instead of Vetur because it's faster, cleaner, and simpler
  "volar.icon.finder": true,
  "volar.icon.preview": true,
  "volar.tsPlugin": true,
  "volar.tsPluginStatus": true,
  "vue3snippets.enable-compile-vue-file-on-did-save-code": false,
  "typescript.tsdk": "/workspace/opsiweb/node_modules/typescript/lib",
  "volar.codeLens.pugTools": true,

  // "volar.completion.autoImportComponent": false,
  "volar-document.trace.server": "messages",
  // "volar.preview.backgroundColor": "#ccc",
  "playwright.cliPath": "/workspace/opsiweb/node_modules/@playwright/test/lib/cli.js",
  "playwright.configs": [
    "/workspace/opsiweb/.config/playwright-all-e2e.config.js",
    "/workspace/opsiweb/.config/playwright-all-components.config.js"
  ],
  "runOnSave.statusMessageTimeout": 5000,
  "runOnSave.commands": [
    // { "match": ".*", "isAsync": true, "cmd": "echo 'I run for all files.'" },
    {
      "match": "\\.vue$",
      "runIn": "terminal",
      "command": "bash /workspace/opsiweb/scripts/playwright.sh \"${fileBasename}\" .vue .test.integration.js test:all:components"
    },
    {
      "match": "\\.stories.js$",
      "runIn": "terminal",
      "command": "bash /workspace/opsiweb/scripts/playwright.sh \"${fileBasename}\" .stories.js .test.integration.js test:all:components"
    },
    {
      "match": "\\.test.integration.js$",
      "runIn": "terminal",
      "command": "bash /workspace/opsiweb/scripts/playwright.sh \"${fileBasename}\" .test.integration.js .test.integration.js test:all:components"
    },
    // { "match": ".*", "cmd": "echo 'I am ${env.USERNAME}.'" }
  ],





  "[vue]": { "editor.insertSpaces": true, "editor.tabSize": 2 },
  "[css]": { "editor.insertSpaces": true,"editor.tabSize": 2 },
  "[html]": { "editor.insertSpaces": true,"editor.tabSize": 2 },
  "[javascript]": { "editor.insertSpaces": true,"editor.tabSize": 2 },
  "[typescript]": { "editor.insertSpaces": true,"editor.tabSize": 2 },
  "[yaml]": { "editor.insertSpaces": true,"editor.tabSize": 2 },
  "[json]": { "editor.insertSpaces": true,"editor.tabSize": 2 },

  "workspace.isHidden": false,
  "files.exclude": {
    ".mockups": false,
    ".nuxt": false,
    "https": false,
    "node_modules": false,
    "static": false,
    ".babelrc": false,
    ".editorconfig": false,
    ".eslintignore": false,
    ".eslintrc.js": false,
    ".gitignore": false,
    "jest.config.js": false,
    "package-lock.json": false,
    "vue-shim.d.ts": false,
    "vue-shim.d.ts.tmp": false,
    "tsconfig.json": false,
    "plugins/README.md": false,
    "pages/README.md": false,
    "middleware/README.md": false,
    "layouts/README.md": false,
    "components/README.md": false,
    "assets/README.md": false,
    "dist": false,
    ".nuxt-storybook": false,
    "coverage": false
  },
  "gitlens.currentLine.format": "${author, }${agoOrDate}${' via 'pullRequest}${ â€¢ message|50?}",
  "gitlens.blame.toggleMode": "file",
  "gitlens.changes.toggleMode": "window",
  "gitlens.changes.locations": [
    "gutter",
    "overview"
  ],
  "gitlens.heatmap.toggleMode": "file",
  "playwrightrunner.playwrightCommand": "npm-uib run vscode:test:all:components",
  "playwrightrunner.playwrightConfigPath": ".config/playwright-all-components.config.js",
  "explorer.sortOrder": "mixed",
}