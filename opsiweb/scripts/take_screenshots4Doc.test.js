const { test } = require('@playwright/test')
const { callStoryId } = require('../uib-components/.utils/playwright/pw-story-call')

// TODO: Default layout with client page
// test.describe('Main layout', () => {})
// test.describe('Quick Start', () => {
//   test('Login', async ({ page }) => {
//     await callStoryId(page, 'form-f-login', 'f-login')
//     const component = await page.locator('[data-testid="FLogin"]')
//     await component.evaluate(() => { document.querySelector('.projectTitle').innerHTML = 'OPSIWEB' })
//     await component.evaluate(() => { document.querySelector('.username').placeholder = 'Username' })
//     await component.evaluate(() => { document.querySelector('.password').placeholder = 'Password' })
//     await component.evaluate(() => { document.querySelector('.login').innerHTML = 'Login' })
//     await component.screenshot({ path: './screenshots/en/opsiweb_login.png' })
//     await component.evaluate(() => { document.querySelector('.username').placeholder = 'Benutzername' })
//     await component.evaluate(() => { document.querySelector('.password').placeholder = 'Passwort' })
//     await component.evaluate(() => { document.querySelector('.login').innerHTML = 'Anmeldung' })
//     await component.screenshot({ path: './screenshots/de/opsiweb_login.png' })
//   })
//   test('Client creation', async ({ page }) => {
//     await callStoryId(page, 'view-v-clients-add-new', 'v-clients-add-new')
//     const component = await page.locator('[data-testid="VClientsAddNew"]')
//     await component.evaluate(() => { document.querySelector('.id').innerHTML = 'ID' })
//     await component.evaluate(() => { document.querySelector('.domainName').placeholder = '.domain.local' })
//     await component.evaluate(() => { document.querySelector('.clientDetails').innerHTML = 'Client Details:' })
//     await component.evaluate(() => { document.querySelector('.description').innerHTML = 'Description' })
//     await component.evaluate(() => { document.querySelector('.inventNum').innerHTML = 'Inventory Number' })
//     await component.evaluate(() => { document.querySelector('.hwAddr').innerHTML = 'MAC' })
//     await component.evaluate(() => { document.querySelector('.ip').innerHTML = 'IP' })
//     await component.evaluate(() => { document.querySelector('.addtnlInfo').innerHTML = 'Additional Information:' })
//     await component.evaluate(() => { document.querySelector('.notes').innerHTML = 'Notes' })
//     await component.evaluate(() => { document.querySelector('.uefi').innerHTML = 'UEFI' })
//     await component.evaluate(() => { document.querySelector('.resetButton').innerHTML = 'Reset' })
//     await component.evaluate(() => { document.querySelector('.addButton').innerHTML = 'Add' })
//     await component.screenshot({ path: './screenshots/en/opsiweb_clientcreation.png' })
//     await component.evaluate(() => { document.querySelector('.description').innerHTML = 'Beschreibung' })
//     await component.evaluate(() => { document.querySelector('.inventNum').innerHTML = 'Inventar Nummer' })
//     await component.evaluate(() => { document.querySelector('.addtnlInfo').innerHTML = 'Zusätzliche Information:' })
//     await component.evaluate(() => { document.querySelector('.notes').innerHTML = 'Anmerkungen' })
//     await component.evaluate(() => { document.querySelector('.resetButton').innerHTML = 'Zurücksetzen' })
//     await component.evaluate(() => { document.querySelector('.addButton').innerHTML = 'Hinzufügen' })
//     await component.screenshot({ path: './screenshots/de/opsiweb_clientcreation.png' })
//   })
// })
test.describe('Manage', () => {
  // test('Servers', async ({ page }) => {
  //   await callStoryId(page, 'view-v-depots', 'v-depots')
  //   const component = await page.locator('[data-testid="VDepots"]')
  //   await component.evaluate(() => { document.querySelector('.nav-title').innerHTML = 'Servers' })
  //   await component.evaluate(() => { document.querySelector('.count').innerHTML = '1/7' })
  //   await component.evaluate(() => { document.querySelector('.filter').placeholder = 'Filter ID' })
  //   await component.screenshot({ path: './screenshots/en/opsiweb_servers.png' })
  //   await component.screenshot({ path: './screenshots/de/opsiweb_servers.png' })
  // })
  // test('Clients', async ({ page }) => {
  //   await callStoryId(page, 'view-v-clients', 'v-clients')
  //   const component = await page.locator('[data-testid="VClients"]')
  //   await component.evaluate(() => { document.querySelector('.nav-title').innerHTML = 'Clients' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_depots').innerHTML = 'Server' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_hostgroup').innerHTML = 'Hostgroups' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_products').innerHTML = 'Products' })
  //   await component.evaluate(() => { document.querySelector('.count').innerHTML = '0/5' })
  //   await component.evaluate(() => { document.querySelector('.filter').placeholder = 'Filter ID' })
  //   await component.screenshot({ path: './screenshots/en/opsiweb_clients.png' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_hostgroup').innerHTML = 'Hostgruppen' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_products').innerHTML = 'Produkte' })
  //   await component.screenshot({ path: './screenshots/de/opsiweb_clients.png' })
  // })
  // test('Products', async ({ page }) => {
  //   await callStoryId(page, 'view-v-products', 'v-products')
  //   const component = await page.locator('[data-testid="VProducts"]')
  //   await component.evaluate(() => { document.querySelector('.nav-title').innerHTML = 'Products' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_depots').innerText = 'Server' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_hostgroup').innerText = 'Hostgroups' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_productgroup').innerText = 'Productgroups' })
  //   await component.evaluate(() => { document.querySelector('.count').innerHTML = '0/3' })
  //   await component.evaluate(() => { document.querySelector('.localboot').innerHTML = 'Localboot(3)' })
  //   await component.evaluate(() => { document.querySelector('.netboot').innerHTML = 'Netboot(7)' })
  //   await component.evaluate(() => { document.querySelector('.filter').placeholder = 'Filter ID' })
  //   await component.screenshot({ path: './screenshots/en/opsiweb_products.png' })
  //   await component.evaluate(() => { document.querySelector('.nav-title').innerHTML = 'Produkte' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_hostgroup').innerText = 'Hostgruppen' })
  //   await component.evaluate(() => { document.querySelector('.tableheader_productgroup').innerText = 'Produktgruppen' })
  //   await component.screenshot({ path: './screenshots/de/opsiweb_products.png' })
  // })
  // test('HostGroups', async ({ page }) => {
  //   await callStoryId(page, 'tree-ts-host-groups', 'ts-host-groups')
  //   await page.click('[data-testid="TSHostGroups"]')
  //   const component = await page.locator('[data-testid="TSHostGroups"]')
  //   await component.evaluate(() => { document.querySelector('.vue-treeselect__placeholder').innerHTML = 'Hostgroups' })
  //   await component.evaluate(() => { document.querySelector('.clearButton').innerHTML = 'Clear selection' })
  //   await page.setViewportSize({ width: 320, height: 210 })
  //   await page.screenshot({ path: './screenshots/en/opsiweb_hostgroups.png' })
  //   await component.evaluate(() => { document.querySelector('.vue-treeselect__placeholder').innerHTML = 'Hostgruppen' })
  //   await component.evaluate(() => { document.querySelector('.clearButton').innerHTML = 'Markierungen entfernen' })
  //   await page.screenshot({ path: './screenshots/de/opsiweb_hostgroups.png' })
  // })
  // test('ProductGroups', async ({ page }) => {
  //   await callStoryId(page, 'tree-ts-product-groups', 'ts-product-group')
  //   await page.click('[data-testid="TSProductGroups"]')
  //   const component = await page.locator('[data-testid="TSProductGroups"]')
  //   await component.evaluate(() => { document.querySelector('.vue-treeselect__placeholder').innerHTML = 'Productgroups' })
  //   await component.evaluate(() => { document.querySelector('.clearButton').innerHTML = 'Clear selection' })
  //   await page.setViewportSize({ width: 320, height: 210 })
  //   await page.screenshot({ path: './screenshots/en/opsiweb_productgroups.png' })
  //   await component.evaluate(() => { document.querySelector('.vue-treeselect__placeholder').innerHTML = 'Produktgruppen' })
  //   await component.evaluate(() => { document.querySelector('.clearButton').innerHTML = 'Markierungen entfernen' })
  //   await page.screenshot({ path: './screenshots/de/opsiweb_productgroups.png' })
  // })
  // test('Host Attributes', async ({ page }) => {
  //   await callStoryId(page, 'view-v-config', 'v-config')
  //   const component = await page.locator('[data-testid="VConfig"]')
  //   await component.evaluate(() => { document.querySelector('.hostattr').innerHTML = 'Host Attributes' })
  //   await component.evaluate(() => { document.querySelector('.hostId').setAttribute('data-label', 'ID') })
  //   await component.evaluate(() => { document.querySelector('.type').setAttribute('data-label', 'Type') })
  //   await component.evaluate(() => { document.querySelector('.description').setAttribute('data-label', 'Description') })
  //   await component.evaluate(() => { document.querySelector('.notes').setAttribute('data-label', 'Notes') })
  //   await component.evaluate(() => { document.querySelector('.hwAddr').setAttribute('data-label', 'MAC') })
  //   await component.evaluate(() => { document.querySelector('.ip').setAttribute('data-label', 'IP') })
  //   await component.evaluate(() => { document.querySelector('.inventNum').setAttribute('data-label', 'Inventory Number') })
  //   await component.evaluate(() => { document.querySelector('.created').setAttribute('data-label', 'Created') })
  //   await component.evaluate(() => { document.querySelector('.lastSeen').setAttribute('data-label', 'Last Seen') })
  //   await component.evaluate(() => { document.querySelector('.hostKey').setAttribute('data-label', 'OPSI Host Key') })
  //   await component.evaluate(() => { document.querySelector('.otp').setAttribute('data-label', 'One Time Password') })
  //   await component.evaluate(() => { document.querySelector('.uefi').setAttribute('data-label', 'UEFI') })
  //   await component.screenshot({ path: './screenshots/en/opsiweb_hostattributes.png' })
  //   await component.evaluate(() => { document.querySelector('.hostattr').innerHTML = 'Host-Attribute' })
  //   await component.evaluate(() => { document.querySelector('.type').setAttribute('data-label', 'Typ') })
  //   await component.evaluate(() => { document.querySelector('.description').setAttribute('data-label', 'Beschreibung') })
  //   await component.evaluate(() => { document.querySelector('.notes').setAttribute('data-label', 'Anmerkungen') })
  //   await component.evaluate(() => { document.querySelector('.inventNum').setAttribute('data-label', 'Inventar Nummer') })
  //   await component.evaluate(() => { document.querySelector('.created').setAttribute('data-label', 'Erstellt') })
  //   await component.evaluate(() => { document.querySelector('.lastSeen').setAttribute('data-label', 'Zuletzt gesehen') })
  //   await component.evaluate(() => { document.querySelector('.hostKey').setAttribute('data-label', 'OPSI-Hostschlüssel') })
  //   await component.evaluate(() => { document.querySelector('.otp').setAttribute('data-label', 'Einmalpasswort OTP') })
  //   await component.screenshot({ path: './screenshots/de/opsiweb_hostattributes.png' })
  // })
  test('Client deletion', async ({ page }) => {
    await callStoryId(page, 'modal-m-delete-client', 'm-delete-client')
    await page.click('[data-testid="MDeleteClient"] .btn')
    await page.setViewportSize({ width: 750, height: 200 })
    await page.evaluate(() => { document.querySelector('.clientdeletion').innerHTML = 'Delete' })
    await page.evaluate(() => { document.querySelector('.modal-title').innerHTML = 'Delete Client' })
    await page.evaluate(() => { document.querySelector('.confirm').innerHTML = 'Are you sure you want to delete the client client1.domain.local ?' })
    await page.evaluate(() => { document.querySelector('.deletion').innerHTML = 'Delete' })
    await page.screenshot({ path: './screenshots/en/opsiweb_clientdeletion.png' })
    await page.evaluate(() => { document.querySelector('.clientdeletion').innerHTML = 'Löschen' })
    await page.evaluate(() => { document.querySelector('.modal-title').innerHTML = 'Client löschen' })
    await page.evaluate(() => { document.querySelector('.confirm').innerHTML = 'Möchten Sie den Client client1.domain.local wirklich löschen? ' })
    await page.evaluate(() => { document.querySelector('.deletion').innerHTML = 'Löschen' })
    await page.screenshot({ path: './screenshots/de/opsiweb_clientdeletion.png' })
  })
  // test('Client reboot', async () => {})
  // test('Client logs', async ({ page }) => {
  //   await callStoryId(page, 'view-v-clients-log', 'v-clients-log')
  //   const component = await page.locator('[data-testid="VClientsLog"]')
  //   await component.evaluate(() => { document.querySelector('.filter_logs').placeholder = 'Filter logs' })
  //   await page.setViewportSize({ width: 1280, height: 500 })
  //   await page.screenshot({ path: './screenshots/en/opsiweb_clientlogs.png' })
  //   await component.evaluate(() => { document.querySelector('.filter_logs').placeholder = 'Logs filtern' })
  //   await page.screenshot({ path: './screenshots/de/opsiweb_clientlogs.png' })
  // })
  // test('Properties and Dependencies', async () => {})

  // test('Quick Save', async ({ page }) => {
  // TODO:
  //   await callStoryId(page, 'view-v-settings-local-specific', 'v-settings-local-specific')
  //   const component = await page.locator('[data-testid="VSettingsLocalSpecific"]')
  //   await page.setViewportSize({ width: 420, height: 100 })
  //   await component.evaluate(() => { document.querySelector('.quicksave').innerHTML = 'Quick save' })
  //   await component.screenshot({ path: './screenshots/en/opsiweb_quicksave.png' })
  //   await component.evaluate(() => { document.querySelector('.quicksave').innerHTML = 'Sofort speichern' })
  //   await component.screenshot({ path: './screenshots/de/opsiweb_quicksave.png' })
  // })

  // test('Push installations', async ({ page }) => {
  // TODO:
  //   await callStoryId(page, 'button-btn-event', 'btn-event')
  //   await page.click('[data-testid="BTNEvent"] .btn')
  //   await page.screenshot({ path: './screenshots/en/opsiweb_pushinstallations.png' })
  //   await page.screenshot({ path: './screenshots/de/opsiweb_pushinstallations.png' })
  // })
  // test('Selections', async ({ page }) => {
  //   await callStoryId(page, 'modal-m-selections-all', 'm-selections-all')
  //   await page.click('[data-testid="MSelectionsAll"] .btn')
  //   await page.setViewportSize({ width: 750, height: 400 })
  //   await page.evaluate(() => { document.querySelector('.modal-title').innerHTML = 'Selected elements' })
  //   await page.evaluate(() => { document.querySelector('.depots').innerHTML = 'Servers' })
  //   await page.evaluate(() => { document.querySelector('.clients').innerHTML = 'Clients' })
  //   await page.screenshot({ path: './screenshots/en/opsiweb_selections.png' })
  //   await page.evaluate(() => { document.querySelector('.modal-title').innerHTML = 'Ausgewählte Elemente' })
  //   await page.screenshot({ path: './screenshots/de/opsiweb_selections.png' })
  // })
})
// test.describe('OPSI specific Settings', () => {
//   // TODO: Settings page with Modules content selected
//   test('OPSI Modules', async ({ page }) => {
//     await callStoryId(page, 'view-v-modules', 'v-modules')
//     const component = await page.locator('[data-testid="VModules"]')
//     await component.evaluate(() => { document.querySelector('.modules').innerHTML = 'Available modules' })
//     await component.screenshot({ path: './screenshots/en/opsiweb_opsiModules.png' })
//     await component.evaluate(() => { document.querySelector('.modules').innerHTML = 'Verfügbare Module' })
//     await component.screenshot({ path: './screenshots/de/opsiweb_opsiModules.png' })
//   })
// })
// test.describe('GUI Settings', () => {
//   test('Language', async ({ page }) => {
//     await callStoryId(page, 'dropdown-dd-lang', 'dd-lang')
//     const component = await page.locator('[data-testid="DropdownDDLang"]')
//     await component.click()
//     await page.setViewportSize({ width: 220, height: 150 })
//     await page.screenshot({ path: './screenshots/en/opsiweb_language.png' })
//     await page.screenshot({ path: './screenshots/de/opsiweb_language.png' })
//   })
//   test('Theme', async ({ page }) => {
// TODO: Main layout in dark theme
//     await callStoryId(page, 'dropdown-dd-theme', 'dd-theme')
//     await page.click('[data-testid="DropdownDDTheme"] .btn')
//     await page.setViewportSize({ width: 220, height: 150 })
//     await page.screenshot({ path: './screenshots/en/opsiweb_theme.png' })
//     await page.screenshot({ path: './screenshots/de/opsiweb_theme.png' })
//   })
// })

// test.describe('GUI', () => {
//   test.describe('Page content', () => {
//     test('breadcrumb', async ({ page }) => {
//       await callStoryId(page, 'bar-b-breadcrumb', 'b-breadcrumb')
//       const component = await page.locator('[data-testid="BarBBreadcrumb"]')
//       await component.evaluate(() => { document.querySelector('.breadcrumb').innerHTML = 'Server / Configuration' })
//       await component.screenshot({ path: './screenshots/en/opsiweb_breadcrumb.png' })
//       await component.evaluate(() => { document.querySelector('.breadcrumb').innerHTML = 'Server / Konfiguration' })
//       await component.screenshot({ path: './screenshots/de/opsiweb_breadcrumb.png' })
//     })
//     test('header', async ({ page }) => {
//       await callStoryId(page, 'bar-b-collapse-page-header', 'b-collapse-page-header')
//       const component = await page.locator('[data-testid="BarBCollapsePageHeader"]')
//       await component.evaluate(() => { document.querySelector('.nav-title').innerHTML = 'Clients' })
//       await component.evaluate(() => { document.querySelector('.tableheader_depots').innerHTML = 'Server' })
//       await component.evaluate(() => { document.querySelector('.tableheader_hostgroup').innerHTML = 'Hostgroups' })
//       await component.evaluate(() => { document.querySelector('.tableheader_products').innerHTML = 'Products' })
//       await component.screenshot({ path: './screenshots/en/opsiweb_header.png' })
//       await component.evaluate(() => { document.querySelector('.tableheader_hostgroup').innerHTML = 'Hostgruppen' })
//       await component.evaluate(() => { document.querySelector('.tableheader_products').innerHTML = 'Produkte' })
//       await component.screenshot({ path: './screenshots/de/opsiweb_header.png' })
//     })
//   })
//   test.describe('Table', () => {
//     test('filter', async ({ page }) => {
//       await callStoryId(page, 'input-i-filter', 'i-filter')
//       const component = await page.locator('[data-testid="IFilter"]')
//       await component.type('Filter ID')
//       await component.screenshot({ path: './screenshots/en/opsiweb_table_filter.png' })
//       await component.screenshot({ path: './screenshots/de/opsiweb_table_filter.png' })
//     })
//     test('sorting', async ({ page }) => {
//       await callStoryId(page, 'dropdown-dd-table-sorting', 'dd-table-sorting')
//       await page.click('[data-testid="DropdownDDTableSorting"] .btn')
//       await page.setViewportSize({ width: 220, height: 310 })
//       const component = await page.locator('[data-testid="DropdownDDTableSorting"]')
//       await component.evaluate(() => { document.querySelector('.sortDirection').innerHTML = 'Sort descending' })
//       await page.screenshot({ path: './screenshots/en/opsiweb_table_sorting.png' })
//       await component.evaluate(() => { document.querySelector('.sortDirection').innerHTML = 'Absteigende Sortierung' })
//       await page.screenshot({ path: './screenshots/de/opsiweb_table_sorting.png' })
//     })
//     test('column selection', async ({ page }) => {
//       await callStoryId(page, 'dropdown-dd-table-column-visibility', 'dd-table-column-visibility')
//       await page.click('[data-testid="DropdownDDTableColumnVisibility"] .btn')
//       await page.setViewportSize({ width: 220, height: 210 })
//       await page.screenshot({ path: './screenshots/en/opsiweb_table_columnselection.png' })
//       await page.screenshot({ path: './screenshots/de/opsiweb_table_columnselection.png' })
//     })
//     test('pagination', async ({ page }) => {
//       await callStoryId(page, 'bar-b-table-footer', 'b-table-footer')
//       const component = await page.locator('[data-testid="BTableFooter"]')
//       await component.screenshot({ path: './screenshots/en/opsiweb_table_pagination.png' })
//       await component.screenshot({ path: './screenshots/de/opsiweb_table_pagination.png' })
//     })
//   })
// })
