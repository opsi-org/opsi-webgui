const { test } = require('@playwright/test')
const { callStoryId } = require('../../uib-components/.utils/playwright/pw-story-call')
const en = require('../../uib-components/locale/en.json')
const de = require('../../uib-components/locale/de.json')
test('Track changes button', async ({ page }) => {
  await callStoryId(page, 'modal-m-track-changes', 'm-track-changes')
  const component = await page.locator('[data-testid="MTrackChanges"]')
  await (new Promise(resolve => setTimeout(resolve, 1000)))
  await page.evaluate((val) => { document.querySelector('.btnlabel').innerHTML = val }, en['button.track.changes'])
  await component.screenshot({ path: './screenshots/en/opsiweb_buttontrackchanges.png' })
  await page.evaluate((val) => { document.querySelector('.btnlabel').innerHTML = val }, de['button.track.changes'])
  await component.screenshot({ path: './screenshots/de/opsiweb_buttontrackchanges.png' })
})
test('Track changes modal', async ({ page }) => {
  await callStoryId(page, 'modal-m-track-changes', 'm-track-changes')
  await page.click('[data-testid="MTrackChanges"] .btn')
  // await page.click('[data-testid="MTrackChanges"] .btn-block')
  await (new Promise(resolve => setTimeout(resolve, 1000)))
  await page.setViewportSize({ width: 750, height: 450 })
  await page.evaluate((val) => { document.querySelector('.modal-title').innerHTML = val }, en['button.track.changes'])
  await page.evaluate((val) => { document.querySelector('.filterchanges').placeholder = val }, en['table.filterBy.DepotsClients'])
  await page.evaluate((val) => { document.querySelector('.saveall').innerHTML = val }, en['button.saveall'])
  await page.evaluate((val) => { document.querySelector('.resetall').innerHTML = val }, en['button.resetAll'])
  await page.screenshot({ path: './screenshots/en/opsiweb_trackchanges.png' })
  await page.evaluate((val) => { document.querySelector('.modal-title').innerHTML = val }, de['button.track.changes'])
  await page.evaluate((val) => { document.querySelector('.filterchanges').placeholder = val }, de['table.filterBy.DepotsClients'])
  await page.evaluate((val) => { document.querySelector('.saveall').innerHTML = val }, de['button.saveall'])
  await page.evaluate((val) => { document.querySelector('.resetall').innerHTML = val }, de['button.resetAll'])
  await page.screenshot({ path: './screenshots/de/opsiweb_trackchanges.png' })
})
